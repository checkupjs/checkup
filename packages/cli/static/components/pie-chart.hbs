<div class="px-6 py-4">
  <div class="font-bold text-xl mb-2">{{resultData.meta.friendlyTaskName}}</div>
  <canvas id="chart-area-{{resultData.UUID}}"></canvas>
  <div class="font-bold text-lg">{{resultData.resultDescription}}</div>
</div>

{{!-- CHECKUP-CHART-JS --}}

<script>
  let canvasFor{{resultData.UUID}} = document.getElementById('chart-area-{{resultData.UUID}}').getContext('2d');
  let optionFor{{resultData.UUID}} = {
    type: 'pie',
    data: {
      datasets: [{
        data: [{{resultData.values}}],
        backgroundColor: [{{{resultData.backgroundColors}}}],
      }],
      labels: [{{{resultData.labels}}}],
    },
    options: {
      legend: {
        position: 'right',
      },
      animation: {
        onComplete: function () {
          var ctx = this.chart.ctx;
          ctx.font = Chart.helpers.fontString(Chart.defaults.global.defaultFontFamily, 'normal', Chart.defaults.global.defaultFontFamily);
          ctx.textAlign = 'center';
          ctx.textBaseline = 'bottom';

          this.data.datasets.forEach(function (dataset) {

            for (var i = 0; i < dataset.data.length; i++) {
              var model = dataset._meta[Object.keys(dataset._meta)[0]].data[i]._model,
                  total = dataset._meta[Object.keys(dataset._meta)[0]].total,
                  mid_radius = model.innerRadius + (model.outerRadius - model.innerRadius)/2,
                  start_angle = model.startAngle,
                  end_angle = model.endAngle,
                  mid_angle = start_angle + (end_angle - start_angle)/2;

              var x = mid_radius * Math.cos(mid_angle);
              var y = mid_radius * Math.sin(mid_angle);

              ctx.fillStyle = '#000000';

              ctx.fillText(dataset.data[i], model.x + x, model.y + y);
            }
          });
        }
    }

    }
  };

  window['pieChart-{{resultData.UUID}}'] = new Chart(canvasFor{{resultData.UUID}}, optionFor{{resultData.UUID}});
</script>
