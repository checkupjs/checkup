// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`octane-migration-status-task-result JSON output it should have basic JSON results 1`] = `
Object {
  "meta": Object {
    "friendlyTaskName": "Ember Octane Migration Status",
    "taskClassification": Object {
      "category": "core",
      "priority": "medium",
    },
    "taskName": "octane-migration-status",
  },
  "result": Object {
    "esLint": Object {
      "migrationTasks": Object {
        "glimmer-components": Object {
          "completionInfo": Object {
            "completed": 4,
            "percentage": "66.67",
            "total": 6,
          },
          "name": "Glimmer Component",
          "relatedResults": Array [
            Object {
              "errorCount": 4,
              "filePath": "my-fake-app/app/components/account-token.js",
              "fixableErrorCount": 0,
              "fixableWarningCount": 0,
              "messages": Array [
                Object {
                  "column": 8,
                  "endColumn": 17,
                  "endLine": 1,
                  "line": 1,
                  "message": "Use Glimmer components(@glimmer/component) instead of classic components(@ember/component)",
                  "nodeType": "ImportDefaultSpecifier",
                  "ruleId": "ember/no-classic-components",
                  "severity": 2,
                },
                Object {
                  "column": 16,
                  "endColumn": 3,
                  "endLine": 23,
                  "line": 3,
                  "message": "Native JS classes should be used instead of classic classes",
                  "nodeType": "CallExpression",
                  "ruleId": "ember/no-classic-classes",
                  "severity": 2,
                },
                Object {
                  "column": 16,
                  "endColumn": 3,
                  "endLine": 23,
                  "line": 3,
                  "message": "Please switch to a tagless component by setting \`tagName: ''\` or converting to a Glimmer component",
                  "nodeType": "CallExpression",
                  "ruleId": "ember/require-tagless-components",
                  "severity": 2,
                },
                Object {
                  "column": 3,
                  "endColumn": 4,
                  "endLine": 22,
                  "line": 9,
                  "message": "Use the @action decorator instead of declaring an actions hash",
                  "nodeType": "Property",
                  "ruleId": "ember/no-actions-hash",
                  "severity": 2,
                },
              ],
              "source": "",
              "warningCount": 0,
            },
            Object {
              "errorCount": 0,
              "filePath": "my-fake-app/app/components/foo-bar-baz.js",
              "fixableErrorCount": 0,
              "fixableWarningCount": 0,
              "messages": Array [],
              "warningCount": 0,
            },
            Object {
              "errorCount": 2,
              "filePath": "my-fake-app/app/components/active-repo-count.js",
              "fixableErrorCount": 0,
              "fixableWarningCount": 0,
              "messages": Array [
                Object {
                  "column": 16,
                  "endColumn": 3,
                  "endLine": 59,
                  "line": 8,
                  "message": "Native JS classes should be used instead of classic classes",
                  "nodeType": "CallExpression",
                  "ruleId": "ember/no-classic-classes",
                  "severity": 2,
                },
                Object {
                  "column": 8,
                  "endColumn": 17,
                  "endLine": 1,
                  "line": 1,
                  "message": "Use Glimmer components(@glimmer/component) instead of classic components(@ember/component)",
                  "nodeType": "ImportDefaultSpecifier",
                  "ruleId": "ember/no-classic-components",
                  "severity": 2,
                },
              ],
              "source": "",
              "warningCount": 0,
            },
            Object {
              "errorCount": 1,
              "filePath": "my-fake-app/app/components/add-cron-job.js",
              "fixableErrorCount": 0,
              "fixableWarningCount": 0,
              "messages": Array [
                Object {
                  "column": 16,
                  "endColumn": 3,
                  "endLine": 54,
                  "line": 6,
                  "message": "The this.set() method is a classic ember object method, and can't be used in octane classes. You can refactor this usage to use a utility version instead (e.g. get(this, 'foo')), or to use native/modern syntax instead. Alternatively, you can add the @classic decorator to this class to continue using classic APIs.",
                  "nodeType": "CallExpression",
                  "ruleId": "ember/classic-decorator-no-classic-methods",
                  "severity": 2,
                },
              ],
              "source": "",
              "warningCount": 0,
            },
            Object {
              "errorCount": 2,
              "filePath": "my-fake-app/app/components/add-env-var.js",
              "fixableErrorCount": 0,
              "fixableWarningCount": 0,
              "messages": Array [
                Object {
                  "column": 3,
                  "endColumn": 4,
                  "endLine": 65,
                  "line": 52,
                  "message": "Use the @action decorator instead of declaring an actions hash",
                  "nodeType": "Property",
                  "ruleId": "ember/no-actions-hash",
                  "severity": 2,
                },
                Object {
                  "column": 3,
                  "endColumn": 4,
                  "endLine": 65,
                  "line": 52,
                  "message": "Don't use computed properties with native classes. Use getters or @tracked properties instead",
                  "nodeType": "Property",
                  "ruleId": "ember/no-computed-properties-in-native-classes",
                  "severity": 2,
                },
              ],
              "source": "",
              "warningCount": 0,
            },
            Object {
              "errorCount": 3,
              "filePath": "my-fake-app/app/components/build-messages-list.js",
              "fixableErrorCount": 0,
              "fixableWarningCount": 0,
              "messages": Array [
                Object {
                  "column": 12,
                  "endColumn": 34,
                  "endLine": 24,
                  "fix": Object {
                    "range": Array [
                      617,
                      639,
                    ],
                    "text": "this.isExpanded",
                  },
                  "line": 24,
                  "message": "Use \`this.isExpanded\` instead of \`this.get('isExpanded')\`",
                  "nodeType": "CallExpression",
                  "ruleId": "ember/no-get",
                  "severity": 2,
                },
                Object {
                  "column": 25,
                  "endColumn": 45,
                  "endLine": 36,
                  "fix": Object {
                    "range": Array [
                      985,
                      1005,
                    ],
                    "text": "this.maxLevel",
                  },
                  "line": 36,
                  "message": "Use \`this.maxLevel\` instead of \`this.get('maxLevel')\`",
                  "nodeType": "CallExpression",
                  "ruleId": "ember/no-get",
                  "severity": 2,
                },
                Object {
                  "column": 26,
                  "endColumn": 52,
                  "endLine": 40,
                  "fix": Object {
                    "range": Array [
                      1093,
                      1119,
                    ],
                    "text": "this.sortedMessages",
                  },
                  "line": 40,
                  "message": "Use \`this.sortedMessages\` instead of \`this.get('sortedMessages')\`",
                  "nodeType": "CallExpression",
                  "ruleId": "ember/no-get",
                  "severity": 2,
                },
              ],
              "source": "",
              "warningCount": 0,
            },
          ],
        },
        "native-classes": Object {
          "completionInfo": Object {
            "completed": 1,
            "percentage": "9.09",
            "total": 11,
          },
          "name": "Native Class",
          "relatedResults": Array [
            Object {
              "errorCount": 4,
              "filePath": "my-fake-app/app/components/account-token.js",
              "fixableErrorCount": 0,
              "fixableWarningCount": 0,
              "messages": Array [
                Object {
                  "column": 8,
                  "endColumn": 17,
                  "endLine": 1,
                  "line": 1,
                  "message": "Use Glimmer components(@glimmer/component) instead of classic components(@ember/component)",
                  "nodeType": "ImportDefaultSpecifier",
                  "ruleId": "ember/no-classic-components",
                  "severity": 2,
                },
                Object {
                  "column": 16,
                  "endColumn": 3,
                  "endLine": 23,
                  "line": 3,
                  "message": "Native JS classes should be used instead of classic classes",
                  "nodeType": "CallExpression",
                  "ruleId": "ember/no-classic-classes",
                  "severity": 2,
                },
                Object {
                  "column": 16,
                  "endColumn": 3,
                  "endLine": 23,
                  "line": 3,
                  "message": "Please switch to a tagless component by setting \`tagName: ''\` or converting to a Glimmer component",
                  "nodeType": "CallExpression",
                  "ruleId": "ember/require-tagless-components",
                  "severity": 2,
                },
                Object {
                  "column": 3,
                  "endColumn": 4,
                  "endLine": 22,
                  "line": 9,
                  "message": "Use the @action decorator instead of declaring an actions hash",
                  "nodeType": "Property",
                  "ruleId": "ember/no-actions-hash",
                  "severity": 2,
                },
              ],
              "source": "",
              "warningCount": 0,
            },
            Object {
              "errorCount": 0,
              "filePath": "my-fake-app/app/components/foo-bar-baz.js",
              "fixableErrorCount": 0,
              "fixableWarningCount": 0,
              "messages": Array [],
              "warningCount": 0,
            },
            Object {
              "errorCount": 2,
              "filePath": "my-fake-app/app/components/active-repo-count.js",
              "fixableErrorCount": 0,
              "fixableWarningCount": 0,
              "messages": Array [
                Object {
                  "column": 16,
                  "endColumn": 3,
                  "endLine": 59,
                  "line": 8,
                  "message": "Native JS classes should be used instead of classic classes",
                  "nodeType": "CallExpression",
                  "ruleId": "ember/no-classic-classes",
                  "severity": 2,
                },
                Object {
                  "column": 8,
                  "endColumn": 17,
                  "endLine": 1,
                  "line": 1,
                  "message": "Use Glimmer components(@glimmer/component) instead of classic components(@ember/component)",
                  "nodeType": "ImportDefaultSpecifier",
                  "ruleId": "ember/no-classic-components",
                  "severity": 2,
                },
              ],
              "source": "",
              "warningCount": 0,
            },
            Object {
              "errorCount": 1,
              "filePath": "my-fake-app/app/components/add-cron-job.js",
              "fixableErrorCount": 0,
              "fixableWarningCount": 0,
              "messages": Array [
                Object {
                  "column": 16,
                  "endColumn": 3,
                  "endLine": 54,
                  "line": 6,
                  "message": "The this.set() method is a classic ember object method, and can't be used in octane classes. You can refactor this usage to use a utility version instead (e.g. get(this, 'foo')), or to use native/modern syntax instead. Alternatively, you can add the @classic decorator to this class to continue using classic APIs.",
                  "nodeType": "CallExpression",
                  "ruleId": "ember/classic-decorator-no-classic-methods",
                  "severity": 2,
                },
              ],
              "source": "",
              "warningCount": 0,
            },
            Object {
              "errorCount": 2,
              "filePath": "my-fake-app/app/components/add-env-var.js",
              "fixableErrorCount": 0,
              "fixableWarningCount": 0,
              "messages": Array [
                Object {
                  "column": 3,
                  "endColumn": 4,
                  "endLine": 65,
                  "line": 52,
                  "message": "Use the @action decorator instead of declaring an actions hash",
                  "nodeType": "Property",
                  "ruleId": "ember/no-actions-hash",
                  "severity": 2,
                },
                Object {
                  "column": 3,
                  "endColumn": 4,
                  "endLine": 65,
                  "line": 52,
                  "message": "Don't use computed properties with native classes. Use getters or @tracked properties instead",
                  "nodeType": "Property",
                  "ruleId": "ember/no-computed-properties-in-native-classes",
                  "severity": 2,
                },
              ],
              "source": "",
              "warningCount": 0,
            },
            Object {
              "errorCount": 3,
              "filePath": "my-fake-app/app/components/build-messages-list.js",
              "fixableErrorCount": 0,
              "fixableWarningCount": 0,
              "messages": Array [
                Object {
                  "column": 12,
                  "endColumn": 34,
                  "endLine": 24,
                  "fix": Object {
                    "range": Array [
                      617,
                      639,
                    ],
                    "text": "this.isExpanded",
                  },
                  "line": 24,
                  "message": "Use \`this.isExpanded\` instead of \`this.get('isExpanded')\`",
                  "nodeType": "CallExpression",
                  "ruleId": "ember/no-get",
                  "severity": 2,
                },
                Object {
                  "column": 25,
                  "endColumn": 45,
                  "endLine": 36,
                  "fix": Object {
                    "range": Array [
                      985,
                      1005,
                    ],
                    "text": "this.maxLevel",
                  },
                  "line": 36,
                  "message": "Use \`this.maxLevel\` instead of \`this.get('maxLevel')\`",
                  "nodeType": "CallExpression",
                  "ruleId": "ember/no-get",
                  "severity": 2,
                },
                Object {
                  "column": 26,
                  "endColumn": 52,
                  "endLine": 40,
                  "fix": Object {
                    "range": Array [
                      1093,
                      1119,
                    ],
                    "text": "this.sortedMessages",
                  },
                  "line": 40,
                  "message": "Use \`this.sortedMessages\` instead of \`this.get('sortedMessages')\`",
                  "nodeType": "CallExpression",
                  "ruleId": "ember/no-get",
                  "severity": 2,
                },
              ],
              "source": "",
              "warningCount": 0,
            },
            Object {
              "errorCount": 1,
              "filePath": "my-fake-app/app/controllers/account/foo.js",
              "fixableErrorCount": 0,
              "fixableWarningCount": 0,
              "messages": Array [
                Object {
                  "column": 16,
                  "endColumn": 3,
                  "endLine": 6,
                  "line": 3,
                  "message": "Native JS classes should be used instead of classic classes",
                  "nodeType": "CallExpression",
                  "ruleId": "ember/no-classic-classes",
                  "severity": 2,
                },
              ],
              "source": "",
              "warningCount": 0,
            },
            Object {
              "errorCount": 1,
              "filePath": "my-fake-app/app/helpers/my-link.js",
              "fixableErrorCount": 0,
              "fixableWarningCount": 0,
              "messages": Array [
                Object {
                  "column": 16,
                  "endColumn": 3,
                  "endLine": 29,
                  "line": 9,
                  "message": "Native JS classes should be used instead of classic classes",
                  "nodeType": "CallExpression",
                  "ruleId": "ember/no-classic-classes",
                  "severity": 2,
                },
              ],
              "source": "",
              "warningCount": 0,
            },
            Object {
              "errorCount": 1,
              "filePath": "my-fake-app/app/models/foo-bar.js",
              "fixableErrorCount": 0,
              "fixableWarningCount": 0,
              "messages": Array [
                Object {
                  "column": 16,
                  "endColumn": 3,
                  "endLine": 19,
                  "line": 5,
                  "message": "Native JS classes should be used instead of classic classes",
                  "nodeType": "CallExpression",
                  "ruleId": "ember/no-classic-classes",
                  "severity": 2,
                },
              ],
              "source": "",
              "warningCount": 0,
            },
            Object {
              "errorCount": 1,
              "filePath": "my-fake-app/app/routes/my-route.js",
              "fixableErrorCount": 0,
              "fixableWarningCount": 0,
              "messages": Array [
                Object {
                  "column": 16,
                  "endColumn": 3,
                  "endLine": 13,
                  "line": 3,
                  "message": "Native JS classes should be used instead of classic classes",
                  "nodeType": "CallExpression",
                  "ruleId": "ember/no-classic-classes",
                  "severity": 2,
                },
              ],
              "source": "",
              "warningCount": 0,
            },
            Object {
              "errorCount": 1,
              "filePath": "my-fake-app/app/services/my-service.js",
              "fixableErrorCount": 0,
              "fixableWarningCount": 0,
              "messages": Array [
                Object {
                  "column": 16,
                  "endColumn": 3,
                  "endLine": 70,
                  "line": 10,
                  "message": "Native JS classes should be used instead of classic classes",
                  "nodeType": "CallExpression",
                  "ruleId": "ember/no-classic-classes",
                  "severity": 2,
                },
              ],
              "source": "",
              "warningCount": 0,
            },
          ],
        },
        "tagless-components": Object {
          "completionInfo": Object {
            "completed": 5,
            "percentage": "83.33",
            "total": 6,
          },
          "name": "Tagless Component",
          "relatedResults": Array [
            Object {
              "errorCount": 4,
              "filePath": "my-fake-app/app/components/account-token.js",
              "fixableErrorCount": 0,
              "fixableWarningCount": 0,
              "messages": Array [
                Object {
                  "column": 8,
                  "endColumn": 17,
                  "endLine": 1,
                  "line": 1,
                  "message": "Use Glimmer components(@glimmer/component) instead of classic components(@ember/component)",
                  "nodeType": "ImportDefaultSpecifier",
                  "ruleId": "ember/no-classic-components",
                  "severity": 2,
                },
                Object {
                  "column": 16,
                  "endColumn": 3,
                  "endLine": 23,
                  "line": 3,
                  "message": "Native JS classes should be used instead of classic classes",
                  "nodeType": "CallExpression",
                  "ruleId": "ember/no-classic-classes",
                  "severity": 2,
                },
                Object {
                  "column": 16,
                  "endColumn": 3,
                  "endLine": 23,
                  "line": 3,
                  "message": "Please switch to a tagless component by setting \`tagName: ''\` or converting to a Glimmer component",
                  "nodeType": "CallExpression",
                  "ruleId": "ember/require-tagless-components",
                  "severity": 2,
                },
                Object {
                  "column": 3,
                  "endColumn": 4,
                  "endLine": 22,
                  "line": 9,
                  "message": "Use the @action decorator instead of declaring an actions hash",
                  "nodeType": "Property",
                  "ruleId": "ember/no-actions-hash",
                  "severity": 2,
                },
              ],
              "source": "",
              "warningCount": 0,
            },
            Object {
              "errorCount": 0,
              "filePath": "my-fake-app/app/components/foo-bar-baz.js",
              "fixableErrorCount": 0,
              "fixableWarningCount": 0,
              "messages": Array [],
              "warningCount": 0,
            },
            Object {
              "errorCount": 2,
              "filePath": "my-fake-app/app/components/active-repo-count.js",
              "fixableErrorCount": 0,
              "fixableWarningCount": 0,
              "messages": Array [
                Object {
                  "column": 16,
                  "endColumn": 3,
                  "endLine": 59,
                  "line": 8,
                  "message": "Native JS classes should be used instead of classic classes",
                  "nodeType": "CallExpression",
                  "ruleId": "ember/no-classic-classes",
                  "severity": 2,
                },
                Object {
                  "column": 8,
                  "endColumn": 17,
                  "endLine": 1,
                  "line": 1,
                  "message": "Use Glimmer components(@glimmer/component) instead of classic components(@ember/component)",
                  "nodeType": "ImportDefaultSpecifier",
                  "ruleId": "ember/no-classic-components",
                  "severity": 2,
                },
              ],
              "source": "",
              "warningCount": 0,
            },
            Object {
              "errorCount": 1,
              "filePath": "my-fake-app/app/components/add-cron-job.js",
              "fixableErrorCount": 0,
              "fixableWarningCount": 0,
              "messages": Array [
                Object {
                  "column": 16,
                  "endColumn": 3,
                  "endLine": 54,
                  "line": 6,
                  "message": "The this.set() method is a classic ember object method, and can't be used in octane classes. You can refactor this usage to use a utility version instead (e.g. get(this, 'foo')), or to use native/modern syntax instead. Alternatively, you can add the @classic decorator to this class to continue using classic APIs.",
                  "nodeType": "CallExpression",
                  "ruleId": "ember/classic-decorator-no-classic-methods",
                  "severity": 2,
                },
              ],
              "source": "",
              "warningCount": 0,
            },
            Object {
              "errorCount": 2,
              "filePath": "my-fake-app/app/components/add-env-var.js",
              "fixableErrorCount": 0,
              "fixableWarningCount": 0,
              "messages": Array [
                Object {
                  "column": 3,
                  "endColumn": 4,
                  "endLine": 65,
                  "line": 52,
                  "message": "Use the @action decorator instead of declaring an actions hash",
                  "nodeType": "Property",
                  "ruleId": "ember/no-actions-hash",
                  "severity": 2,
                },
                Object {
                  "column": 3,
                  "endColumn": 4,
                  "endLine": 65,
                  "line": 52,
                  "message": "Don't use computed properties with native classes. Use getters or @tracked properties instead",
                  "nodeType": "Property",
                  "ruleId": "ember/no-computed-properties-in-native-classes",
                  "severity": 2,
                },
              ],
              "source": "",
              "warningCount": 0,
            },
            Object {
              "errorCount": 3,
              "filePath": "my-fake-app/app/components/build-messages-list.js",
              "fixableErrorCount": 0,
              "fixableWarningCount": 0,
              "messages": Array [
                Object {
                  "column": 12,
                  "endColumn": 34,
                  "endLine": 24,
                  "fix": Object {
                    "range": Array [
                      617,
                      639,
                    ],
                    "text": "this.isExpanded",
                  },
                  "line": 24,
                  "message": "Use \`this.isExpanded\` instead of \`this.get('isExpanded')\`",
                  "nodeType": "CallExpression",
                  "ruleId": "ember/no-get",
                  "severity": 2,
                },
                Object {
                  "column": 25,
                  "endColumn": 45,
                  "endLine": 36,
                  "fix": Object {
                    "range": Array [
                      985,
                      1005,
                    ],
                    "text": "this.maxLevel",
                  },
                  "line": 36,
                  "message": "Use \`this.maxLevel\` instead of \`this.get('maxLevel')\`",
                  "nodeType": "CallExpression",
                  "ruleId": "ember/no-get",
                  "severity": 2,
                },
                Object {
                  "column": 26,
                  "endColumn": 52,
                  "endLine": 40,
                  "fix": Object {
                    "range": Array [
                      1093,
                      1119,
                    ],
                    "text": "this.sortedMessages",
                  },
                  "line": 40,
                  "message": "Use \`this.sortedMessages\` instead of \`this.get('sortedMessages')\`",
                  "nodeType": "CallExpression",
                  "ruleId": "ember/no-get",
                  "severity": 2,
                },
              ],
              "source": "",
              "warningCount": 0,
            },
          ],
        },
        "tracked-properties": Object {
          "completionInfo": Object {
            "completed": 5,
            "percentage": "83.33",
            "total": 6,
          },
          "name": "Tracked Properties",
          "relatedResults": Array [
            Object {
              "errorCount": 4,
              "filePath": "my-fake-app/app/components/account-token.js",
              "fixableErrorCount": 0,
              "fixableWarningCount": 0,
              "messages": Array [
                Object {
                  "column": 8,
                  "endColumn": 17,
                  "endLine": 1,
                  "line": 1,
                  "message": "Use Glimmer components(@glimmer/component) instead of classic components(@ember/component)",
                  "nodeType": "ImportDefaultSpecifier",
                  "ruleId": "ember/no-classic-components",
                  "severity": 2,
                },
                Object {
                  "column": 16,
                  "endColumn": 3,
                  "endLine": 23,
                  "line": 3,
                  "message": "Native JS classes should be used instead of classic classes",
                  "nodeType": "CallExpression",
                  "ruleId": "ember/no-classic-classes",
                  "severity": 2,
                },
                Object {
                  "column": 16,
                  "endColumn": 3,
                  "endLine": 23,
                  "line": 3,
                  "message": "Please switch to a tagless component by setting \`tagName: ''\` or converting to a Glimmer component",
                  "nodeType": "CallExpression",
                  "ruleId": "ember/require-tagless-components",
                  "severity": 2,
                },
                Object {
                  "column": 3,
                  "endColumn": 4,
                  "endLine": 22,
                  "line": 9,
                  "message": "Use the @action decorator instead of declaring an actions hash",
                  "nodeType": "Property",
                  "ruleId": "ember/no-actions-hash",
                  "severity": 2,
                },
              ],
              "source": "",
              "warningCount": 0,
            },
            Object {
              "errorCount": 0,
              "filePath": "my-fake-app/app/components/foo-bar-baz.js",
              "fixableErrorCount": 0,
              "fixableWarningCount": 0,
              "messages": Array [],
              "warningCount": 0,
            },
            Object {
              "errorCount": 2,
              "filePath": "my-fake-app/app/components/active-repo-count.js",
              "fixableErrorCount": 0,
              "fixableWarningCount": 0,
              "messages": Array [
                Object {
                  "column": 16,
                  "endColumn": 3,
                  "endLine": 59,
                  "line": 8,
                  "message": "Native JS classes should be used instead of classic classes",
                  "nodeType": "CallExpression",
                  "ruleId": "ember/no-classic-classes",
                  "severity": 2,
                },
                Object {
                  "column": 8,
                  "endColumn": 17,
                  "endLine": 1,
                  "line": 1,
                  "message": "Use Glimmer components(@glimmer/component) instead of classic components(@ember/component)",
                  "nodeType": "ImportDefaultSpecifier",
                  "ruleId": "ember/no-classic-components",
                  "severity": 2,
                },
              ],
              "source": "",
              "warningCount": 0,
            },
            Object {
              "errorCount": 1,
              "filePath": "my-fake-app/app/components/add-cron-job.js",
              "fixableErrorCount": 0,
              "fixableWarningCount": 0,
              "messages": Array [
                Object {
                  "column": 16,
                  "endColumn": 3,
                  "endLine": 54,
                  "line": 6,
                  "message": "The this.set() method is a classic ember object method, and can't be used in octane classes. You can refactor this usage to use a utility version instead (e.g. get(this, 'foo')), or to use native/modern syntax instead. Alternatively, you can add the @classic decorator to this class to continue using classic APIs.",
                  "nodeType": "CallExpression",
                  "ruleId": "ember/classic-decorator-no-classic-methods",
                  "severity": 2,
                },
              ],
              "source": "",
              "warningCount": 0,
            },
            Object {
              "errorCount": 2,
              "filePath": "my-fake-app/app/components/add-env-var.js",
              "fixableErrorCount": 0,
              "fixableWarningCount": 0,
              "messages": Array [
                Object {
                  "column": 3,
                  "endColumn": 4,
                  "endLine": 65,
                  "line": 52,
                  "message": "Use the @action decorator instead of declaring an actions hash",
                  "nodeType": "Property",
                  "ruleId": "ember/no-actions-hash",
                  "severity": 2,
                },
                Object {
                  "column": 3,
                  "endColumn": 4,
                  "endLine": 65,
                  "line": 52,
                  "message": "Don't use computed properties with native classes. Use getters or @tracked properties instead",
                  "nodeType": "Property",
                  "ruleId": "ember/no-computed-properties-in-native-classes",
                  "severity": 2,
                },
              ],
              "source": "",
              "warningCount": 0,
            },
            Object {
              "errorCount": 3,
              "filePath": "my-fake-app/app/components/build-messages-list.js",
              "fixableErrorCount": 0,
              "fixableWarningCount": 0,
              "messages": Array [
                Object {
                  "column": 12,
                  "endColumn": 34,
                  "endLine": 24,
                  "fix": Object {
                    "range": Array [
                      617,
                      639,
                    ],
                    "text": "this.isExpanded",
                  },
                  "line": 24,
                  "message": "Use \`this.isExpanded\` instead of \`this.get('isExpanded')\`",
                  "nodeType": "CallExpression",
                  "ruleId": "ember/no-get",
                  "severity": 2,
                },
                Object {
                  "column": 25,
                  "endColumn": 45,
                  "endLine": 36,
                  "fix": Object {
                    "range": Array [
                      985,
                      1005,
                    ],
                    "text": "this.maxLevel",
                  },
                  "line": 36,
                  "message": "Use \`this.maxLevel\` instead of \`this.get('maxLevel')\`",
                  "nodeType": "CallExpression",
                  "ruleId": "ember/no-get",
                  "severity": 2,
                },
                Object {
                  "column": 26,
                  "endColumn": 52,
                  "endLine": 40,
                  "fix": Object {
                    "range": Array [
                      1093,
                      1119,
                    ],
                    "text": "this.sortedMessages",
                  },
                  "line": 40,
                  "message": "Use \`this.sortedMessages\` instead of \`this.get('sortedMessages')\`",
                  "nodeType": "CallExpression",
                  "ruleId": "ember/no-get",
                  "severity": 2,
                },
              ],
              "source": "",
              "warningCount": 0,
            },
          ],
        },
      },
      "totalViolations": 17,
    },
    "templateLint": Object {
      "totalViolations": 16,
    },
  },
}
`;

exports[`octane-migration-status-task-result console output simple console output 1`] = `
"=== Octane Migration Status

Handlebars Octane Violations: 0
JavaScript Octane Violations: 17

Migration Task     Completion Percentage 
Native Class       9.09%                 
Tagless Component  83.33%                
Glimmer Component  66.67%                
Tracked Properties 83.33%                

"
`;
