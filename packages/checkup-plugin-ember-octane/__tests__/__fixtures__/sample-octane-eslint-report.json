{
  "results": [
    {
      "filePath": "my-fake-app/app/components/account-token.js",
      "messages": [
        {
          "ruleId": "ember/no-classic-components",
          "severity": 2,
          "message": "Use Glimmer components(@glimmer/component) instead of classic components(@ember/component)",
          "line": 1,
          "column": 8,
          "nodeType": "ImportDefaultSpecifier",
          "endLine": 1,
          "endColumn": 17
        },
        {
          "ruleId": "ember/no-classic-classes",
          "severity": 2,
          "message": "Native JS classes should be used instead of classic classes",
          "line": 3,
          "column": 16,
          "nodeType": "CallExpression",
          "endLine": 23,
          "endColumn": 3
        },
        {
          "ruleId": "ember/require-tagless-components",
          "severity": 2,
          "message": "Please switch to a tagless component by setting `tagName: ''` or converting to a Glimmer component",
          "line": 3,
          "column": 16,
          "nodeType": "CallExpression",
          "endLine": 23,
          "endColumn": 3
        },
        {
          "ruleId": "ember/no-actions-hash",
          "severity": 2,
          "message": "Use the @action decorator instead of declaring an actions hash",
          "line": 9,
          "column": 3,
          "nodeType": "Property",
          "endLine": 22,
          "endColumn": 4
        },
        {
          "column": 1,
          "endColumn": 68,
          "endLine": 11,
          "line": 11,
          "message": "Don't use a mixin",
          "nodeType": "ImportDeclaration",
          "ruleId": "ember/no-mixins",
          "severity": 2
        }
      ],
      "errorCount": 5,
      "warningCount": 0,
      "fixableErrorCount": 0,
      "fixableWarningCount": 0,
      "source": ""
    },
    {
      "filePath": "my-fake-app/app/components/foo-bar-baz.js",
      "messages": [],
      "errorCount": 0,
      "warningCount": 0,
      "fixableErrorCount": 0,
      "fixableWarningCount": 0
    },
    {
      "filePath": "my-fake-app/app/components/active-repo-count.js",
      "messages": [
        {
          "ruleId": "ember/no-classic-classes",
          "severity": 2,
          "message": "Native JS classes should be used instead of classic classes",
          "line": 8,
          "column": 16,
          "nodeType": "CallExpression",
          "endLine": 59,
          "endColumn": 3
        },
        {
          "ruleId": "ember/no-classic-components",
          "severity": 2,
          "message": "Use Glimmer components(@glimmer/component) instead of classic components(@ember/component)",
          "line": 1,
          "column": 8,
          "nodeType": "ImportDefaultSpecifier",
          "endLine": 1,
          "endColumn": 17
        }
      ],
      "errorCount": 2,
      "warningCount": 0,
      "fixableErrorCount": 0,
      "fixableWarningCount": 0,
      "source": ""
    },
    {
      "filePath": "my-fake-app/app/components/add-cron-job.js",
      "messages": [
        {
          "ruleId": "ember/classic-decorator-no-classic-methods",
          "severity": 2,
          "message": "The this.set() method is a classic ember object method, and can't be used in octane classes. You can refactor this usage to use a utility version instead (e.g. get(this, 'foo')), or to use native/modern syntax instead. Alternatively, you can add the @classic decorator to this class to continue using classic APIs.",
          "line": 6,
          "column": 16,
          "nodeType": "CallExpression",
          "endLine": 54,
          "endColumn": 3
        }
      ],
      "errorCount": 1,
      "warningCount": 0,
      "fixableErrorCount": 0,
      "fixableWarningCount": 0,
      "source": ""
    },
    {
      "filePath": "my-fake-app/app/components/add-env-var.js",
      "messages": [
        {
          "ruleId": "ember/no-actions-hash",
          "severity": 2,
          "message": "Use the @action decorator instead of declaring an actions hash",
          "line": 52,
          "column": 3,
          "nodeType": "Property",
          "endLine": 65,
          "endColumn": 4
        },
        {
          "ruleId": "ember/no-computed-properties-in-native-classes",
          "severity": 2,
          "message": "Don't use computed properties with native classes. Use getters or @tracked properties instead",
          "line": 52,
          "column": 3,
          "nodeType": "Property",
          "endLine": 65,
          "endColumn": 4
        }
      ],
      "errorCount": 2,
      "warningCount": 0,
      "fixableErrorCount": 0,
      "fixableWarningCount": 0,
      "source": ""
    },
    {
      "filePath": "my-fake-app/app/components/build-messages-list.js",
      "messages": [
        {
          "ruleId": "ember/no-get",
          "severity": 2,
          "message": "Use `this.isExpanded` instead of `this.get('isExpanded')`",
          "line": 24,
          "column": 12,
          "nodeType": "CallExpression",
          "endLine": 24,
          "endColumn": 34,
          "fix": { "range": [617, 639], "text": "this.isExpanded" }
        },
        {
          "ruleId": "ember/no-get",
          "severity": 2,
          "message": "Use `this.maxLevel` instead of `this.get('maxLevel')`",
          "line": 36,
          "column": 25,
          "nodeType": "CallExpression",
          "endLine": 36,
          "endColumn": 45,
          "fix": { "range": [985, 1005], "text": "this.maxLevel" }
        },
        {
          "ruleId": "ember/no-get",
          "severity": 2,
          "message": "Use `this.sortedMessages` instead of `this.get('sortedMessages')`",
          "line": 40,
          "column": 26,
          "nodeType": "CallExpression",
          "endLine": 40,
          "endColumn": 52,
          "fix": { "range": [1093, 1119], "text": "this.sortedMessages" }
        }
      ],
      "errorCount": 3,
      "warningCount": 0,
      "fixableErrorCount": 0,
      "fixableWarningCount": 0,
      "source": ""
    },
    {
      "filePath": "my-fake-app/app/controllers/account/foo.js",
      "messages": [
        {
          "ruleId": "ember/no-classic-classes",
          "severity": 2,
          "message": "Native JS classes should be used instead of classic classes",
          "line": 3,
          "column": 16,
          "nodeType": "CallExpression",
          "endLine": 6,
          "endColumn": 3
        }
      ],
      "errorCount": 1,
      "warningCount": 0,
      "fixableErrorCount": 0,
      "fixableWarningCount": 0,
      "source": ""
    },
    {
      "filePath": "my-fake-app/app/helpers/my-link.js",
      "messages": [
        {
          "ruleId": "ember/no-classic-classes",
          "severity": 2,
          "message": "Native JS classes should be used instead of classic classes",
          "line": 9,
          "column": 16,
          "nodeType": "CallExpression",
          "endLine": 29,
          "endColumn": 3
        }
      ],
      "errorCount": 1,
      "warningCount": 0,
      "fixableErrorCount": 0,
      "fixableWarningCount": 0,
      "source": ""
    },
    {
      "filePath": "my-fake-app/app/models/foo-bar.js",
      "messages": [
        {
          "ruleId": "ember/no-classic-classes",
          "severity": 2,
          "message": "Native JS classes should be used instead of classic classes",
          "line": 5,
          "column": 16,
          "nodeType": "CallExpression",
          "endLine": 19,
          "endColumn": 3
        }
      ],
      "errorCount": 1,
      "warningCount": 0,
      "fixableErrorCount": 0,
      "fixableWarningCount": 0,
      "source": ""
    },
    {
      "filePath": "my-fake-app/app/routes/my-route.js",
      "messages": [
        {
          "ruleId": "ember/no-classic-classes",
          "severity": 2,
          "message": "Native JS classes should be used instead of classic classes",
          "line": 3,
          "column": 16,
          "nodeType": "CallExpression",
          "endLine": 13,
          "endColumn": 3
        }
      ],
      "errorCount": 1,
      "warningCount": 0,
      "fixableErrorCount": 0,
      "fixableWarningCount": 0,
      "source": ""
    },
    {
      "filePath": "my-fake-app/app/services/my-service.js",
      "messages": [
        {
          "ruleId": "ember/no-classic-classes",
          "severity": 2,
          "message": "Native JS classes should be used instead of classic classes",
          "line": 10,
          "column": 16,
          "nodeType": "CallExpression",
          "endLine": 70,
          "endColumn": 3
        },
        {
          "column": 31,
          "endColumn": 8,
          "endLine": 1,
          "line": 91,
          "message": "Don't use a mixin",
          "nodeType": "ImportDeclaration",
          "ruleId": "ember/no-mixins",
          "severity": 2
        }
      ],
      "errorCount": 2,
      "warningCount": 0,
      "fixableErrorCount": 0,
      "fixableWarningCount": 0,
      "source": ""
    }
  ],
  "errorCount": 19,
  "warningCount": 0,
  "fixableErrorCount": 0,
  "fixableWarningCount": 0,
  "usedDeprecatedRules": []
}
